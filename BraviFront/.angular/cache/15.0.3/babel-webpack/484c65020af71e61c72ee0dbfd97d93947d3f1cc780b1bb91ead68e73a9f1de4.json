{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, ViewChild } from '@angular/core';\nimport { Contato } from 'src/app/model/Contato';\nimport { Pessoa } from 'src/app/model/Pessoa';\nlet PessoalistComponent = class PessoalistComponent {\n  constructor(requestService) {\n    this.requestService = requestService;\n    this.dtLoad = false;\n  }\n  ngOnInit() {\n    this.onLoadDtTable();\n  }\n  onNewPessoa() {}\n  onLoadDtTable() {\n    this.listPessoas = [];\n    this.dtLoad = false;\n    let that = this;\n    this.requestService.GetPessoas().then(data => {\n      if (Array.isArray(data) && data.length > 0) {\n        that.listPessoas = data.map(p => {\n          let pessoa = new Pessoa();\n          pessoa.fromData(p);\n          if (Array.isArray(p.listContato) && p.listContato.length > 0) {\n            pessoa.ListContatos = p.listContato?.map(c => {\n              let contato = new Contato();\n              contato.fromData(c);\n              return contato;\n            });\n          }\n          return pessoa;\n        });\n      }\n      that.listPessoasFilter = that.listPessoas;\n      that.dtLoad = true;\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n  dtTableFilter(event) {\n    const val = event.target.value.toLowerCase().trim();\n    if (val == null || val == undefined || val == \"\") {\n      this.listPessoasFilter = this.listPessoas;\n      return;\n    }\n    this.dtLoad = false;\n    this.listPessoasFilter = this.listPessoas.filter(pessoa => {\n      return pessoa.Nome.indexOf(val) >= 0 ? pessoa : false;\n    });\n  }\n};\n__decorate([ViewChild('dtTable')], PessoalistComponent.prototype, \"dtTable\", void 0);\nPessoalistComponent = __decorate([Component({\n  selector: 'app-pessoalist',\n  templateUrl: './pessoalist.component.html',\n  styleUrls: ['./pessoalist.component.css']\n})], PessoalistComponent);\nexport { PessoalistComponent };","map":{"version":3,"mappings":";AACA,SAASA,SAAS,EAAUC,SAAS,QAA2B,eAAe;AAC/E,SAASC,OAAO,QAAQ,uBAAuB;AAC/C,SAASC,MAAM,QAAQ,sBAAsB;AAQtC,IAAMC,mBAAmB,GAAzB,MAAMA,mBAAmB;EAM9BC,YAAoBC,cAA8B;IAA9B,mBAAc,GAAdA,cAAc;IAL3B,WAAM,GAAY,KAAK;EAM9B;EAGAC,QAAQ;IACN,IAAI,CAACC,aAAa,EAAE;EACtB;EAEAC,WAAW,IAEX;EAEAD,aAAa;IACX,IAAI,CAACE,WAAW,GAAG,EAAE;IACrB,IAAI,CAACC,MAAM,GAAG,KAAK;IACnB,IAAIC,IAAI,GAAG,IAAI;IACf,IAAI,CAACN,cAAc,CAACO,UAAU,EAAE,CAACC,IAAI,CAAEC,IAAS,IAAI;MAClD,IAAIC,KAAK,CAACC,OAAO,CAACF,IAAI,CAAC,IAAIA,IAAI,CAACG,MAAM,GAAG,CAAC,EAAE;QAC1CN,IAAI,CAACF,WAAW,GAAGK,IAAI,CAACI,GAAG,CAAEC,CAAM,IAAI;UACrC,IAAIC,MAAM,GAAG,IAAIlB,MAAM,EAAE;UACzBkB,MAAM,CAACC,QAAQ,CAACF,CAAC,CAAC;UAClB,IAAIJ,KAAK,CAACC,OAAO,CAACG,CAAC,CAACG,WAAW,CAAC,IAAIH,CAAC,CAACG,WAAW,CAACL,MAAM,GAAG,CAAC,EAAE;YAC5DG,MAAM,CAACG,YAAY,GAAGJ,CAAC,CAACG,WAAW,EAAEJ,GAAG,CAAEM,CAAM,IAAI;cAClD,IAAIC,OAAO,GAAG,IAAIxB,OAAO,EAAE;cAC3BwB,OAAO,CAACJ,QAAQ,CAACG,CAAC,CAAC;cACnB,OAAOC,OAAO;YAChB,CAAC,CAAC;;UAEJ,OAAOL,MAAM;QACf,CAAC,CAAC;;MAGJT,IAAI,CAACe,iBAAiB,GAAGf,IAAI,CAACF,WAAW;MACzCE,IAAI,CAACD,MAAM,GAAG,IAAI;IACpB,CAAC,CAAC,CAACiB,KAAK,CAAEC,KAAK,IAAI;MACjBC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IACpB,CAAC,CAAC;EACJ;EACAG,aAAa,CAACC,KAAU;IACtB,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK,CAACC,WAAW,EAAE,CAACC,IAAI,EAAE;IACnD,IAAIJ,GAAG,IAAI,IAAI,IAAIA,GAAG,IAAIK,SAAS,IAAIL,GAAG,IAAI,EAAE,EAAE;MAChD,IAAI,CAACP,iBAAiB,GAAG,IAAI,CAACjB,WAAW;MACzC;;IAEF,IAAI,CAACC,MAAM,GAAG,KAAK;IACnB,IAAI,CAACgB,iBAAiB,GAAG,IAAI,CAACjB,WAAW,CAAC8B,MAAM,CAACnB,MAAM,IAAG;MACxD,OAAOA,MAAM,CAACoB,IAAI,CAACC,OAAO,CAACR,GAAG,CAAC,IAAI,CAAC,GAAGb,MAAM,GAAG,KAAK;IACvD,CAAC,CAAC;EACJ;CACD;AAlDuBsB,YAArB1C,SAAS,CAAC,SAAS,CAAC,oDAAc;AALxBG,mBAAmB,eAL/BJ,SAAS,CAAC;EACT4C,QAAQ,EAAE,gBAAgB;EAC1BC,WAAW,EAAE,6BAA6B;EAC1CC,SAAS,EAAE,CAAC,4BAA4B;CACzC,CAAC,GACW1C,mBAAmB,CAuD/B;SAvDYA,mBAAmB","names":["Component","ViewChild","Contato","Pessoa","PessoalistComponent","constructor","requestService","ngOnInit","onLoadDtTable","onNewPessoa","listPessoas","dtLoad","that","GetPessoas","then","data","Array","isArray","length","map","p","pessoa","fromData","listContato","ListContatos","c","contato","listPessoasFilter","catch","error","console","log","dtTableFilter","event","val","target","value","toLowerCase","trim","undefined","filter","Nome","indexOf","__decorate","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["Z:\\Z\\DEV\\Bravi\\Ver2\\src\\app\\views\\exer3\\pessoalist\\pessoalist.component.ts"],"sourcesContent":["\nimport { Component, OnInit, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { Contato } from 'src/app/model/Contato';\nimport { Pessoa } from 'src/app/model/Pessoa';\nimport { RequestService } from 'src/app/services/request.service';\n\n@Component({\n  selector: 'app-pessoalist',\n  templateUrl: './pessoalist.component.html',\n  styleUrls: ['./pessoalist.component.css']\n})\nexport class PessoalistComponent implements OnInit {\n  public dtLoad: boolean = false;\n  public listPessoas: Array<Pessoa>;\n  public listPessoasFilter: Array<Pessoa>;\n\n  @ViewChild('dtTable') dtTable: any;\n  constructor(private requestService: RequestService) {\n  }\n\n\n  ngOnInit() {\n    this.onLoadDtTable();\n  }\n\n  onNewPessoa() {\n\n  }\n\n  onLoadDtTable() {\n    this.listPessoas = [];\n    this.dtLoad = false;\n    let that = this;\n    this.requestService.GetPessoas().then((data: any) => {\n      if (Array.isArray(data) && data.length > 0) {\n        that.listPessoas = data.map((p: any) => {\n          let pessoa = new Pessoa();\n          pessoa.fromData(p);\n          if (Array.isArray(p.listContato) && p.listContato.length > 0) {\n            pessoa.ListContatos = p.listContato?.map((c: any) => {\n              let contato = new Contato();\n              contato.fromData(c);\n              return contato;\n            });\n          }\n          return pessoa\n        });\n      }\n\n      that.listPessoasFilter = that.listPessoas;\n      that.dtLoad = true;\n    }).catch((error) => {\n      console.log(error);\n    })\n  }\n  dtTableFilter(event: any) {\n    const val = event.target.value.toLowerCase().trim();\n    if (val == null || val == undefined || val == \"\") {\n      this.listPessoasFilter = this.listPessoas;\n      return\n    }\n    this.dtLoad = false;\n    this.listPessoasFilter = this.listPessoas.filter(pessoa => {\n      return pessoa.Nome.indexOf(val) >= 0 ? pessoa : false\n    })\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}