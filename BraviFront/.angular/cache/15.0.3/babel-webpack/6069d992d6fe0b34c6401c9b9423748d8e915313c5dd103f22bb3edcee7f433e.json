{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Contato } from 'src/app/model/Contato';\nimport { eTipo } from 'src/app/model/eTipo';\nimport { Pessoa } from 'src/app/model/Pessoa';\nimport Swal from 'sweetalert2';\nlet PessoaSaveComponent = class PessoaSaveComponent {\n  constructor(requestService, ngxService, route, router) {\n    this.requestService = requestService;\n    this.ngxService = ngxService;\n    this.route = route;\n    this.router = router;\n    this.listTipo = [];\n    this.dtLoad = false;\n    this.isNewContato = false;\n    this.eTipo = eTipo;\n    this.toast = Swal.mixin({\n      toast: true,\n      position: 'top-end',\n      showConfirmButton: false,\n      timer: 5000,\n      timerProgressBar: true\n    });\n    this.nPessoa = new Pessoa();\n  }\n  ngOnInit() {\n    let that = this;\n    this.route.params.subscribe(params => {\n      if (params.id !== undefined && params.id !== null) {\n        that.pessoaId = params.id;\n        that.requestService.GetPessoa(this.pessoaId).then(data => {\n          let pessoa = new Pessoa();\n          pessoa.fromData(data);\n          if (Array.isArray(data.listContato) && data.listContato.length > 0) {\n            pessoa.ListContato = data.listContato?.map(c => {\n              let contato = new Contato();\n              contato.fromData(c);\n              return contato;\n            });\n            that.listContato = [...pessoa.ListContato];\n            that.onLoadDtTable();\n            that.dtLoad = true;\n          }\n          that.nPessoa = pessoa;\n        });\n      }\n    });\n    this.isNewContato = false;\n    this.listContatoFilter = this.listContato = [];\n    let keys = Object.keys(this.eTipo);\n    keys.forEach((k, i) => {\n      this.listTipo.push({\n        name: k,\n        value: i\n      });\n    });\n  }\n  onNewContato() {\n    this.isNewContato = true;\n    this.nContato = new Contato();\n  }\n  onCancelNewContato() {\n    this.isNewContato = false;\n  }\n  onSave() {\n    if (this.listContato.length > 0) {\n      this.nPessoa.ListContato = [...this.listContato];\n    }\n    let that = this;\n    this.ngxService.start();\n    this.requestService.PostPessoas(this.nPessoa).then(data => {\n      that.ngxService.stop();\n      this.router.navigate(['/exer3/pessoas']);\n      this.toast.fire({\n        text: 'Salvo com Sucesso!',\n        icon: 'success'\n      });\n    }).catch(error => {\n      that.ngxService.stop();\n      console.log(error);\n      this.toast.fire({\n        text: 'Um erro ocorreu!',\n        icon: 'error'\n      });\n    });\n  }\n  onIncludeNewContato() {\n    if (this.nContato != undefined) {\n      this.listContato.push(this.nContato);\n    }\n    this.onLoadDtTable();\n    this.onCancelNewContato();\n  }\n  onLoadDtTable() {\n    this.dtLoad = false;\n    if (this.listContato.length > 0) {\n      this.listContatoFilter = [...this.listContato];\n      this.dtLoad = true;\n    }\n  }\n  onRemoveContato(row) {\n    let idx = this.listContato.findIndex(f => {\n      return f == row;\n    });\n    if (idx >= 0) this.listContato.splice(idx, 1);\n    this.onLoadDtTable();\n  }\n};\nPessoaSaveComponent = __decorate([Component({\n  selector: 'app-pessoa-save',\n  templateUrl: './pessoa-save.component.html',\n  styleUrls: ['./pessoa-save.component.css']\n})], PessoaSaveComponent);\nexport { PessoaSaveComponent };","map":{"version":3,"mappings":"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","names":["Component","Contato","eTipo","Pessoa","Swal","PessoaSaveComponent","constructor","requestService","ngxService","route","router","mixin","toast","position","showConfirmButton","timer","timerProgressBar","nPessoa","ngOnInit","that","params","subscribe","id","undefined","pessoaId","GetPessoa","then","data","pessoa","fromData","Array","isArray","listContato","length","ListContato","map","c","contato","onLoadDtTable","dtLoad","isNewContato","listContatoFilter","keys","Object","forEach","k","i","listTipo","push","name","value","onNewContato","nContato","onCancelNewContato","onSave","start","PostPessoas","stop","navigate","fire","text","icon","catch","error","console","log","onIncludeNewContato","onRemoveContato","row","idx","findIndex","f","splice","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["Z:\\Z\\DEV\\Bravi\\Ver2\\src\\app\\views\\exer3\\pessoa-save\\pessoa-save.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { NgxUiLoaderService } from 'ngx-ui-loader';\nimport { Contato } from 'src/app/model/Contato';\nimport { eTipo } from 'src/app/model/eTipo';\nimport { Pessoa } from 'src/app/model/Pessoa';\nimport { RequestService } from 'src/app/services/request.service';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-pessoa-save',\n  templateUrl: './pessoa-save.component.html',\n  styleUrls: ['./pessoa-save.component.css']\n})\nexport class PessoaSaveComponent implements OnInit {\n\n  public pessoaId: number;\n  public nPessoa: Pessoa;\n  public nContato: Contato;\n  public listTipo: any = []\n\n\n  public listContato: Array<Contato>;\n  public listContatoFilter: Array<Contato>;\n  public dtLoad: boolean = false;\n\n  public isNewContato: boolean = false\n\n  eTipo = eTipo;\n  constructor(private requestService: RequestService, private ngxService: NgxUiLoaderService\n    , private route: ActivatedRoute, private router: Router) {\n    this.nPessoa = new Pessoa();\n  }\n  toast = Swal.mixin({\n    toast: true,\n    position: 'top-end',\n    showConfirmButton: false,\n    timer: 5000,\n    timerProgressBar: true,\n  })\n\n  ngOnInit() {\n    let that = this;\n    this.route.params.subscribe((params: any) => {\n      if (params.id !== undefined && params.id !== null) {\n        that.pessoaId = params.id;\n\n        that.requestService.GetPessoa(this.pessoaId).then((data: any) => {\n          let pessoa = new Pessoa();\n          pessoa.fromData(data);\n          if (Array.isArray(data.listContato) && data.listContato.length > 0) {\n            pessoa.ListContato = data.listContato?.map((c: any) => {\n              let contato = new Contato();\n              contato.fromData(c);\n              return contato;\n            });\n\n            that.listContato = [...pessoa.ListContato];\n            that.onLoadDtTable();\n            that.dtLoad = true;\n          }\n          that.nPessoa = pessoa;\n        });\n      }\n    });\n\n\n    this.isNewContato = false;\n    this.listContatoFilter = this.listContato = [];\n\n    let keys = Object.keys(this.eTipo);\n    keys.forEach((k: any, i: number) => {\n      this.listTipo.push({ name: k, value: i })\n    })\n  }\n\n  onNewContato() {\n    this.isNewContato = true;\n    this.nContato = new Contato();\n  }\n\n  onCancelNewContato() {\n    this.isNewContato = false;\n  }\n\n  onSave() {\n    if (this.listContato.length > 0) {\n      this.nPessoa.ListContato = [...this.listContato];\n    }\n    let that = this;\n    this.ngxService.start();\n    this.requestService.PostPessoas(this.nPessoa)\n      .then((data: any) => {\n        that.ngxService.stop();\n        this.router.navigate(['/exer3/pessoas']);\n\n        this.toast.fire({\n          text: 'Salvo com Sucesso!',\n          icon: 'success'\n        });\n      }).catch((error) => {\n        that.ngxService.stop();\n        console.log(error);\n        this.toast.fire({\n          text: 'Um erro ocorreu!',\n          icon: 'error'\n        });\n      })\n  }\n  onIncludeNewContato() {\n    if (this.nContato != undefined) {\n      this.listContato.push(this.nContato);\n    }\n    this.onLoadDtTable();\n    this.onCancelNewContato();\n  }\n\n  onLoadDtTable() {\n    this.dtLoad = false;\n    if (this.listContato.length > 0) {\n      this.listContatoFilter = [...this.listContato];\n      this.dtLoad = true;\n    }\n  }\n\n  onRemoveContato(row: Contato) {\n    let idx = this.listContato.findIndex((f: any) => {\n      return f == row\n    });\n    if (idx >= 0) this.listContato.splice(idx, 1);\n\n    this.onLoadDtTable();\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}