{"ast":null,"code":"import { Contato } from 'src/app/model/Contato';\nimport { eTipo } from 'src/app/model/eTipo';\nimport { Pessoa } from 'src/app/model/Pessoa';\nimport Swal from 'sweetalert2';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/request.service\";\nimport * as i2 from \"ngx-ui-loader\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\nimport * as i6 from \"@swimlane/ngx-datatable\";\nfunction PessoaSaveComponent_div_17_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 16)(1, \"button\", 17);\n    i0.ɵɵlistener(\"click\", function PessoaSaveComponent_div_17_Template_button_click_1_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.onNewContato());\n    });\n    i0.ɵɵtext(2, \" Incluir Novo Contato\");\n    i0.ɵɵelement(3, \"i\", 18);\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction PessoaSaveComponent_div_18_option_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 29);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const tipo_r6 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", tipo_r6.value);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(tipo_r6.name);\n  }\n}\nfunction PessoaSaveComponent_div_18_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 7)(1, \"small\", 19);\n    i0.ɵɵtext(2, \"Novo cadastro de Contato\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 20)(4, \"label\", 21);\n    i0.ɵɵtext(5, \"Tipo\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"select\", 22);\n    i0.ɵɵlistener(\"ngModelChange\", function PessoaSaveComponent_div_18_Template_select_ngModelChange_6_listener($event) {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.nContato.Tipo = $event);\n    });\n    i0.ɵɵelementStart(7, \"option\", 23);\n    i0.ɵɵtext(8, \"Tipo Contato\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(9, PessoaSaveComponent_div_18_option_9_Template, 2, 2, \"option\", 24);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"div\", 11);\n    i0.ɵɵtext(11, \" Campo \\\"Tipo\\\" Inv\\u00E1lido \");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(12, \"div\", 20)(13, \"label\", 25);\n    i0.ɵɵtext(14, \"Valor\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"input\", 26);\n    i0.ɵɵlistener(\"ngModelChange\", function PessoaSaveComponent_div_18_Template_input_ngModelChange_15_listener($event) {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r9.nContato.Valor = $event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(16, \"div\", 11);\n    i0.ɵɵtext(17, \" Campo \\\"Valor\\\" Inv\\u00E1lido \");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(18, \"div\", 27)(19, \"button\", 28);\n    i0.ɵɵlistener(\"click\", function PessoaSaveComponent_div_18_Template_button_click_19_listener() {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r10 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r10.onCancelNewContato());\n    });\n    i0.ɵɵtext(20, \"Cancelar \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(21, \"button\", 17);\n    i0.ɵɵlistener(\"click\", function PessoaSaveComponent_div_18_Template_button_click_21_listener() {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r11 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r11.onIncludeNewContato());\n    });\n    i0.ɵɵtext(22, \"Incluir \");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngModel\", ctx_r1.nContato.Tipo);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.listTipo);\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngModel\", ctx_r1.nContato.Valor);\n  }\n}\nfunction PessoaSaveComponent_div_19_ng_template_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0);\n  }\n  if (rf & 2) {\n    const value_r16 = ctx.value;\n    i0.ɵɵtextInterpolate1(\" \", value_r16, \" \");\n  }\n}\nfunction PessoaSaveComponent_div_19_ng_template_10_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r20 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 38)(1, \"button\", 39);\n    i0.ɵɵlistener(\"click\", function PessoaSaveComponent_div_19_ng_template_10_Template_button_click_1_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r20);\n      const row_r17 = restoredCtx.row;\n      const ctx_r19 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r19.onRemoveContato(row_r17));\n    });\n    i0.ɵɵelement(2, \"i\", 40);\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction PessoaSaveComponent_div_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 30)(1, \"small\", 19);\n    i0.ɵɵtext(2, \"Contatos\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 31)(4, \"ngx-datatable\", 32, 33)(6, \"ngx-datatable-column\", 34);\n    i0.ɵɵtemplate(7, PessoaSaveComponent_div_19_ng_template_7_Template, 1, 1, \"ng-template\", 35);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(8, \"ngx-datatable-column\", 36);\n    i0.ɵɵelementStart(9, \"ngx-datatable-column\", 37);\n    i0.ɵɵtemplate(10, PessoaSaveComponent_div_19_ng_template_10_Template, 3, 0, \"ng-template\", 35);\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"rowHeight\", 60)(\"columnMode\", \"force\")(\"rows\", ctx_r2.listContatoFilter)(\"footerHeight\", 80)(\"limit\", 10)(\"headerHeight\", 50);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"sortable\", true);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"sortable\", true);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"maxWidth\", 100)(\"flexGrow\", 1)(\"sortable\", false);\n  }\n}\nexport class PessoaSaveComponent {\n  constructor(requestService, ngxService, route, router) {\n    this.requestService = requestService;\n    this.ngxService = ngxService;\n    this.route = route;\n    this.router = router;\n    this.listTipo = [];\n    this.dtLoad = false;\n    this.isNewContato = false;\n    this.eTipo = eTipo;\n    this.toast = Swal.mixin({\n      toast: true,\n      position: 'top-end',\n      showConfirmButton: false,\n      timer: 5000,\n      timerProgressBar: true\n    });\n    this.nPessoa = new Pessoa();\n  }\n  ngOnInit() {\n    let that = this;\n    this.route.params.subscribe(params => {\n      if (params.id !== undefined && params.id !== null) {\n        that.pessoaId = params.id;\n        that.requestService.GetPessoa(this.pessoaId).then(data => {\n          let pessoa = new Pessoa();\n          pessoa.fromData(data);\n          if (Array.isArray(data.listContato) && data.listContato.length > 0) {\n            pessoa.ListContato = data.listContato?.map(c => {\n              let contato = new Contato();\n              contato.fromData(c);\n              return contato;\n            });\n            that.listContato = [...pessoa.ListContato];\n            that.onLoadDtTable();\n            that.dtLoad = true;\n          }\n          that.nPessoa = pessoa;\n        });\n      }\n    });\n    this.isNewContato = false;\n    this.listContatoFilter = this.listContato = [];\n    let keys = Object.keys(this.eTipo);\n    keys.forEach((k, i) => {\n      this.listTipo.push({\n        name: k,\n        value: i\n      });\n    });\n  }\n  onNewContato() {\n    this.isNewContato = true;\n    this.nContato = new Contato();\n  }\n  onCancelNewContato() {\n    this.isNewContato = false;\n  }\n  onSave() {\n    if (this.listContato.length > 0) {\n      this.nPessoa.ListContato = [...this.listContato];\n    }\n    let that = this;\n    this.ngxService.start();\n    this.requestService.PostPessoas(this.nPessoa).then(data => {\n      that.ngxService.stop();\n      this.router.navigate(['/exer3/pessoas']);\n      this.toast.fire({\n        text: 'Salvo com Sucesso!',\n        icon: 'success'\n      });\n    }).catch(error => {\n      that.ngxService.stop();\n      console.log(error);\n      this.toast.fire({\n        text: 'Um erro ocorreu!',\n        icon: 'error'\n      });\n    });\n  }\n  onIncludeNewContato() {\n    if (this.nContato != undefined) {\n      this.listContato.push(this.nContato);\n    }\n    this.onLoadDtTable();\n    this.onCancelNewContato();\n  }\n  onLoadDtTable() {\n    this.dtLoad = false;\n    if (this.listContato.length > 0) {\n      this.listContatoFilter = [...this.listContato];\n      this.dtLoad = true;\n    }\n  }\n  onRemoveContato(row) {\n    let idx = this.listContato.findIndex(f => {\n      return f == row;\n    });\n    if (idx >= 0) this.listContato.splice(idx, 1);\n    this.onLoadDtTable();\n  }\n}\nPessoaSaveComponent.ɵfac = function PessoaSaveComponent_Factory(t) {\n  return new (t || PessoaSaveComponent)(i0.ɵɵdirectiveInject(i1.RequestService), i0.ɵɵdirectiveInject(i2.NgxUiLoaderService), i0.ɵɵdirectiveInject(i3.ActivatedRoute), i0.ɵɵdirectiveInject(i3.Router));\n};\nPessoaSaveComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: PessoaSaveComponent,\n  selectors: [[\"app-pessoa-save\"]],\n  decls: 20,\n  vars: 4,\n  consts: [[1, \"card\"], [1, \"card-header\"], [1, \"text-muted\"], [1, \"d-flex\", \"justify-content-end\"], [\"type\", \"button\", 1, \"btn\", \"btn-success\", \"mr-2\", 3, \"click\"], [1, \"fa\", \"fa-check-circle-o\", \"me-2\"], [1, \"card-body\"], [1, \"row\"], [1, \"col-md-4\"], [\"for\", \"nome\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"nome\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [1, \"valid-feedback\"], [1, \"col-md-7\", \"ms-auto\"], [\"class\", \"d-flex flex-row-reverse\", 4, \"ngIf\"], [\"class\", \"row\", 4, \"ngIf\"], [\"class\", \"row mt-5\", 4, \"ngIf\"], [1, \"d-flex\", \"flex-row-reverse\"], [1, \"btn\", \"btn-success\", \"btn-sm\", 3, \"click\"], [1, \"fa\", \"fa-address-book\", \"ms-2\"], [1, \"col-12\", \"text-muted\"], [1, \"col\"], [\"for\", \"tipo\", 1, \"form-label\"], [\"id\", \"tipo\", \"required\", \"\", 1, \"form-select\", 3, \"ngModel\", \"ngModelChange\"], [\"selected\", \"\", \"disabled\", \"\", \"value\", \"\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"for\", \"valor\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"valor\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [1, \"col\", \"d-flex\", \"align-items-end\", \"justify-content-center\"], [1, \"btn\", \"btn-danger\", \"me-2\", \"btn-sm\", 3, \"click\"], [3, \"value\"], [1, \"row\", \"mt-5\"], [1, \"col-sm-12\", \"data-table-rows\", \"data-table-responsive\"], [1, \"expandable\", 3, \"rowHeight\", \"columnMode\", \"rows\", \"footerHeight\", \"limit\", \"headerHeight\"], [\"dtTable\", \"\"], [\"name\", \"Tipo\", \"prop\", \"Tipo\", 3, \"sortable\"], [\"ngx-datatable-cell-template\", \"\"], [\"name\", \"Valor\", \"prop\", \"Valor\", 3, \"sortable\"], [\"name\", \"\", \"prop\", \"action\", 3, \"maxWidth\", \"flexGrow\", \"sortable\"], [1, \"d-flex\", \"align-items-center\", \"justify-content-center\", \"mb-1\"], [1, \"btn\", \"btn-danger\", \"btn-sm\", 3, \"click\"], [1, \"fa\", \"fa-times-circle-o\"]],\n  template: function PessoaSaveComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"span\", 2);\n      i0.ɵɵtext(3, \"Cadastro de Pessoas\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"div\", 3)(5, \"button\", 4);\n      i0.ɵɵlistener(\"click\", function PessoaSaveComponent_Template_button_click_5_listener() {\n        return ctx.onSave();\n      });\n      i0.ɵɵelement(6, \"i\", 5);\n      i0.ɵɵtext(7, \"Salvar\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(8, \"div\", 6)(9, \"div\", 7)(10, \"div\", 8)(11, \"label\", 9);\n      i0.ɵɵtext(12, \"Nome\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"input\", 10);\n      i0.ɵɵlistener(\"ngModelChange\", function PessoaSaveComponent_Template_input_ngModelChange_13_listener($event) {\n        return ctx.nPessoa.Nome = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"div\", 11);\n      i0.ɵɵtext(15, \" Campo \\\"Nome\\\" Inv\\u00E1lido \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(16, \"div\", 12);\n      i0.ɵɵtemplate(17, PessoaSaveComponent_div_17_Template, 4, 0, \"div\", 13);\n      i0.ɵɵtemplate(18, PessoaSaveComponent_div_18_Template, 23, 3, \"div\", 14);\n      i0.ɵɵtemplate(19, PessoaSaveComponent_div_19_Template, 11, 11, \"div\", 15);\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(13);\n      i0.ɵɵproperty(\"ngModel\", ctx.nPessoa.Nome);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngIf\", ctx.isNewContato == false);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.isNewContato == true);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.dtLoad);\n    }\n  },\n  dependencies: [i4.NgForOf, i4.NgIf, i5.NgSelectOption, i5.ɵNgSelectMultipleOption, i5.DefaultValueAccessor, i5.SelectControlValueAccessor, i5.NgControlStatus, i5.RequiredValidator, i5.NgModel, i6.DatatableComponent, i6.DataTableColumnDirective, i6.DataTableColumnCellDirective],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["Contato","eTipo","Pessoa","Swal","i0","PessoaSaveComponent","constructor","requestService","ngxService","route","router","mixin","toast","position","showConfirmButton","timer","timerProgressBar","nPessoa","ngOnInit","that","params","subscribe","id","undefined","pessoaId","GetPessoa","then","data","pessoa","fromData","Array","isArray","listContato","length","ListContato","map","c","contato","onLoadDtTable","dtLoad","isNewContato","listContatoFilter","keys","Object","forEach","k","i","listTipo","push","name","value","onNewContato","nContato","onCancelNewContato","onSave","start","PostPessoas","stop","navigate","fire","text","icon","catch","error","console","log","onIncludeNewContato","onRemoveContato","row","idx","findIndex","f","splice","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["Z:\\Z\\DEV\\Bravi\\Ver2\\src\\app\\views\\exer3\\pessoa-save\\pessoa-save.component.ts","Z:\\Z\\DEV\\Bravi\\Ver2\\src\\app\\views\\exer3\\pessoa-save\\pessoa-save.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { NgxUiLoaderService } from 'ngx-ui-loader';\nimport { Contato } from 'src/app/model/Contato';\nimport { eTipo } from 'src/app/model/eTipo';\nimport { Pessoa } from 'src/app/model/Pessoa';\nimport { RequestService } from 'src/app/services/request.service';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-pessoa-save',\n  templateUrl: './pessoa-save.component.html',\n  styleUrls: ['./pessoa-save.component.css']\n})\nexport class PessoaSaveComponent implements OnInit {\n\n  public pessoaId: number;\n  public nPessoa: Pessoa;\n  public nContato: Contato;\n  public listTipo: any = []\n\n\n  public listContato: Array<Contato>;\n  public listContatoFilter: Array<Contato>;\n  public dtLoad: boolean = false;\n\n  public isNewContato: boolean = false\n\n  eTipo: any = eTipo;\n  constructor(private requestService: RequestService, private ngxService: NgxUiLoaderService\n    , private route: ActivatedRoute, private router: Router) {\n    this.nPessoa = new Pessoa();\n  }\n  toast = Swal.mixin({\n    toast: true,\n    position: 'top-end',\n    showConfirmButton: false,\n    timer: 5000,\n    timerProgressBar: true,\n  })\n\n  ngOnInit() {\n    let that = this;\n    this.route.params.subscribe((params: any) => {\n      if (params.id !== undefined && params.id !== null) {\n        that.pessoaId = params.id;\n\n        that.requestService.GetPessoa(this.pessoaId).then((data: any) => {\n          let pessoa = new Pessoa();\n          pessoa.fromData(data);\n          if (Array.isArray(data.listContato) && data.listContato.length > 0) {\n            pessoa.ListContato = data.listContato?.map((c: any) => {\n              let contato = new Contato();\n              contato.fromData(c);\n              return contato;\n            });\n\n            that.listContato = [...pessoa.ListContato];\n            that.onLoadDtTable();\n            that.dtLoad = true;\n          }\n          that.nPessoa = pessoa;\n        });\n      }\n    });\n\n\n    this.isNewContato = false;\n    this.listContatoFilter = this.listContato = [];\n\n    let keys = Object.keys(this.eTipo);\n    keys.forEach((k: any, i: number) => {\n      this.listTipo.push({ name: k, value: i })\n    })\n  }\n\n  onNewContato() {\n    this.isNewContato = true;\n    this.nContato = new Contato();\n  }\n\n  onCancelNewContato() {\n    this.isNewContato = false;\n  }\n\n  onSave() {\n    if (this.listContato.length > 0) {\n      this.nPessoa.ListContato = [...this.listContato];\n    }\n    let that = this;\n    this.ngxService.start();\n    this.requestService.PostPessoas(this.nPessoa)\n      .then((data: any) => {\n        that.ngxService.stop();\n        this.router.navigate(['/exer3/pessoas']);\n\n        this.toast.fire({\n          text: 'Salvo com Sucesso!',\n          icon: 'success'\n        });\n      }).catch((error) => {\n        that.ngxService.stop();\n        console.log(error);\n        this.toast.fire({\n          text: 'Um erro ocorreu!',\n          icon: 'error'\n        });\n      })\n  }\n  onIncludeNewContato() {\n    if (this.nContato != undefined) {\n      this.listContato.push(this.nContato);\n    }\n    this.onLoadDtTable();\n    this.onCancelNewContato();\n  }\n\n  onLoadDtTable() {\n    this.dtLoad = false;\n    if (this.listContato.length > 0) {\n      this.listContatoFilter = [...this.listContato];\n      this.dtLoad = true;\n    }\n  }\n\n  onRemoveContato(row: Contato) {\n    let idx = this.listContato.findIndex((f: any) => {\n      return f == row\n    });\n    if (idx >= 0) this.listContato.splice(idx, 1);\n\n    this.onLoadDtTable();\n  }\n}\n","<div class=\"card\">\n    <div class=\"card-header\">\n        <span class=\"text-muted\">Cadastro de Pessoas</span>\n        <div class=\"d-flex justify-content-end\">\n            <button type=\"button\" (click)=\"onSave()\" class=\"btn btn-success mr-2\">\n                <i class='fa fa-check-circle-o me-2'></i>Salvar</button>\n        </div>\n    </div>\n    <div class=\"card-body\">\n        <div class=\"row\">\n            <div class=\"col-md-4\">\n                <label for=\"nome\" class=\"form-label\">Nome</label>\n                <input type=\"text\" class=\"form-control\" id=\"nome\" required [(ngModel)]=\"nPessoa.Nome\">\n                <div class=\"valid-feedback\">\n                    Campo \"Nome\" Inválido\n                </div>\n            </div>\n            <div class=\"col-md-7 ms-auto\">\n                <div class=\"d-flex flex-row-reverse\" *ngIf=\"isNewContato == false\">\n                    <button class=\"btn btn-success btn-sm\" (click)=\"onNewContato()\">\n                        Incluir Novo Contato<i class='fa fa-address-book ms-2'></i>\n                    </button>\n                </div>\n                <div class=\"row\" *ngIf=\"isNewContato == true\">\n                    <small class=\"col-12 text-muted\">Novo cadastro de Contato</small>\n                    <div class=\"col\">\n                        <label for=\"tipo\" class=\"form-label\">Tipo</label>\n                        <select class=\"form-select\" id=\"tipo\" required [(ngModel)]=\"nContato.Tipo\">\n                            <option selected disabled value=\"\">Tipo Contato</option>\n                            <option *ngFor=\"let tipo of listTipo\" [value]=\"tipo.value\">{{tipo.name}}</option>\n                        </select>\n                        <div class=\"valid-feedback\">\n                            Campo \"Tipo\" Inválido\n                        </div>\n                    </div>\n                    <div class=\"col\">\n                        <label for=\"valor\" class=\"form-label\">Valor</label>\n                        <input type=\"text\" class=\"form-control\" id=\"valor\" required [(ngModel)]=\"nContato.Valor\">\n                        <div class=\"valid-feedback\">\n                            Campo \"Valor\" Inválido\n                        </div>\n                    </div>\n                    <div class=\"col d-flex align-items-end justify-content-center\">\n                        <button class=\"btn btn-danger me-2 btn-sm\" (click)=\"onCancelNewContato()\">Cancelar\n                        </button>\n                        <button class=\"btn btn-success btn-sm\" (click)=\"onIncludeNewContato()\">Incluir\n                        </button>\n                    </div>\n                </div>\n                <div class=\"row mt-5\" *ngIf=\"dtLoad\">\n                    <small class=\"col-12 text-muted\">Contatos</small>\n                    <div class=\"col-sm-12 data-table-rows data-table-responsive\">\n                        <ngx-datatable #dtTable class=\"expandable\" [rowHeight]=\"60\" [columnMode]=\"'force'\"\n                            [rows]=\"listContatoFilter\" [footerHeight]=\"80\" [limit]=\"10\" [headerHeight]=\"50\">\n                            <ngx-datatable-column name=\"Tipo\" prop=\"Tipo\" [sortable]=\"true\">\n                                <ng-template let-row=\"row\" let-value=\"value\" ngx-datatable-cell-template>\n                                   {{value}}\n                                </ng-template>\n                            </ngx-datatable-column>\n                            <ngx-datatable-column name=\"Valor\" prop=\"Valor\" [sortable]=\"true\">\n                            </ngx-datatable-column>\n                            <ngx-datatable-column name=\"\" prop=\"action\" [maxWidth]=\"100\" [flexGrow]=\"1\"\n                                [sortable]=\"false\">\n                                <ng-template let-row=\"row\" let-value=\"value\" ngx-datatable-cell-template>\n                                    <div class=\"d-flex align-items-center justify-content-center mb-1\">\n                                        <button class=\"btn btn-danger btn-sm\" (click)=\"onRemoveContato(row)\"><i\n                                                class='fa fa-times-circle-o'></i>\n                                        </button>\n                                    </div>\n                                </ng-template>\n                            </ngx-datatable-column>\n                        </ngx-datatable>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}