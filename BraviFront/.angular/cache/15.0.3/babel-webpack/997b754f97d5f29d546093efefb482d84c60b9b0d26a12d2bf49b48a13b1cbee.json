{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Injectable, EventEmitter, forwardRef, Component, Input, Output, NgModule } from '@angular/core';\nimport * as i2 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { Subject } from 'rxjs';\nfunction SortableComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 4);\n    i0.ɵɵlistener(\"dragover\", function SortableComponent_div_1_Template_div_dragover_0_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.onItemDragover($event, 0));\n    })(\"dragenter\", function SortableComponent_div_1_Template_div_dragenter_0_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.cancelEvent($event));\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngClass\", ctx_r0.placeholderClass)(\"ngStyle\", ctx_r0.placeholderStyle);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r0.placeholderItem);\n  }\n}\nfunction SortableComponent_div_2_ng_template_1_Template(rf, ctx) {}\nconst _c0 = function (a0, a1) {\n  return [a0, a1];\n};\nconst _c1 = function (a0, a1) {\n  return {\n    item: a0,\n    index: a1\n  };\n};\nfunction SortableComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 5);\n    i0.ɵɵlistener(\"dragstart\", function SortableComponent_div_2_Template_div_dragstart_0_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r11);\n      const item_r7 = restoredCtx.$implicit;\n      const i_r8 = restoredCtx.index;\n      const ctx_r10 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r10.onItemDragstart($event, item_r7, i_r8));\n    })(\"dragend\", function SortableComponent_div_2_Template_div_dragend_0_listener($event) {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r12 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r12.resetActiveItem($event));\n    })(\"dragover\", function SortableComponent_div_2_Template_div_dragover_0_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r11);\n      const i_r8 = restoredCtx.index;\n      const ctx_r13 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r13.onItemDragover($event, i_r8));\n    })(\"dragenter\", function SortableComponent_div_2_Template_div_dragenter_0_listener($event) {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r14 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r14.cancelEvent($event));\n    });\n    i0.ɵɵtemplate(1, SortableComponent_div_2_ng_template_1_Template, 0, 0, \"ng-template\", 6);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const item_r7 = ctx.$implicit;\n    const i_r8 = ctx.index;\n    const ctx_r1 = i0.ɵɵnextContext();\n    const _r2 = i0.ɵɵreference(4);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(5, _c0, ctx_r1.itemClass, i_r8 === ctx_r1.activeItem ? ctx_r1.itemActiveClass : \"\"))(\"ngStyle\", ctx_r1.getItemStyle(i_r8 === ctx_r1.activeItem));\n    i0.ɵɵattribute(\"aria-grabbed\", i_r8 === ctx_r1.activeItem);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r1.itemTemplate || _r2)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction2(8, _c1, item_r7, i_r8));\n  }\n}\nfunction SortableComponent_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0);\n  }\n  if (rf & 2) {\n    const item_r15 = ctx.item;\n    i0.ɵɵtextInterpolate(item_r15.value);\n  }\n}\nclass DraggableItemService {\n  constructor() {\n    this.onCapture = new Subject();\n  }\n  dragStart(item) {\n    this.draggableItem = item;\n  }\n  getItem() {\n    return this.draggableItem;\n  }\n  captureItem(overZoneIndex, newIndex) {\n    if (this.draggableItem && this.draggableItem.overZoneIndex !== overZoneIndex) {\n      this.draggableItem.lastZoneIndex = this.draggableItem.overZoneIndex;\n      this.draggableItem.overZoneIndex = overZoneIndex;\n      this.onCapture.next(this.draggableItem);\n      this.draggableItem = Object.assign({}, this.draggableItem, {\n        overZoneIndex,\n        i: newIndex\n      });\n    }\n    return this.draggableItem;\n  }\n  onCaptureItem() {\n    return this.onCapture;\n  }\n}\nDraggableItemService.ɵfac = function DraggableItemService_Factory(t) {\n  return new (t || DraggableItemService)();\n};\nDraggableItemService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: DraggableItemService,\n  factory: DraggableItemService.ɵfac,\n  providedIn: 'platform'\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DraggableItemService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'platform'\n    }]\n  }], null, null);\n})();\nclass SortableComponent {\n  constructor(transfer) {\n    /** class name for items wrapper */\n    this.wrapperClass = '';\n    /** style object for items wrapper */\n    this.wrapperStyle = {};\n    /** class name for item */\n    this.itemClass = '';\n    /** style object for item */\n    this.itemStyle = {};\n    /** class name for active item */\n    this.itemActiveClass = '';\n    /** style object for active item */\n    this.itemActiveStyle = {};\n    /** class name for placeholder */\n    this.placeholderClass = '';\n    /** style object for placeholder */\n    this.placeholderStyle = {};\n    /** placeholder item which will be shown if collection is empty */\n    this.placeholderItem = '';\n    /** fired on array change (reordering, insert, remove), same as <code>ngModelChange</code>.\n     *  Returns new items collection as a payload.\n     */\n    this.onChange = new EventEmitter();\n    this.showPlaceholder = false;\n    this.activeItem = -1;\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    this.onTouched = Function.prototype;\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    this.onChanged = Function.prototype;\n    this._items = [];\n    this.transfer = transfer;\n    this.currentZoneIndex = SortableComponent.globalZoneIndex++;\n    this.transfer.onCaptureItem().subscribe(item => this.onDrop(item));\n  }\n  get items() {\n    return this._items;\n  }\n  set items(value) {\n    this._items = value;\n    const out = this.items.map(x => x.initData);\n    this.onChanged(out);\n    this.onChange.emit(out);\n  }\n  onItemDragstart(event, item, i) {\n    this.initDragstartEvent(event);\n    this.onTouched();\n    this.transfer.dragStart({\n      event,\n      item,\n      i,\n      initialIndex: i,\n      lastZoneIndex: this.currentZoneIndex,\n      overZoneIndex: this.currentZoneIndex\n    });\n  }\n  onItemDragover(event, i) {\n    if (!this.transfer.getItem()) {\n      return;\n    }\n    event.preventDefault();\n    const dragItem = this.transfer.captureItem(this.currentZoneIndex, this.items.length);\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    let newArray = [];\n    if (!dragItem) {\n      return;\n    }\n    if (!this.items.length) {\n      newArray = [dragItem.item];\n    } else if (dragItem.i > i) {\n      newArray = [...this.items.slice(0, i), dragItem.item, ...this.items.slice(i, dragItem.i), ...this.items.slice(dragItem.i + 1)];\n    } else {\n      // this.draggedItem.i < i\n      newArray = [...this.items.slice(0, dragItem.i), ...this.items.slice(dragItem.i + 1, i + 1), dragItem.item, ...this.items.slice(i + 1)];\n    }\n    this.items = newArray;\n    dragItem.i = i;\n    this.activeItem = i;\n    this.updatePlaceholderState();\n  }\n  cancelEvent(event) {\n    if (!this.transfer.getItem() || !event) {\n      return;\n    }\n    event.preventDefault();\n  }\n  onDrop(item) {\n    if (item && item.overZoneIndex !== this.currentZoneIndex && item.lastZoneIndex === this.currentZoneIndex) {\n      this.items = this.items.filter((x, i) => i !== item.i);\n      this.updatePlaceholderState();\n    }\n    this.resetActiveItem();\n  }\n  resetActiveItem(event) {\n    this.cancelEvent(event);\n    this.activeItem = -1;\n  }\n  registerOnChange(callback) {\n    this.onChanged = callback;\n  }\n  registerOnTouched(callback) {\n    this.onTouched = callback;\n  }\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  writeValue(value) {\n    if (value) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      this.items = value.map((x, i) => ({\n        id: i,\n        initData: x,\n        value: this.fieldName ? x[this.fieldName] : x\n      }));\n    } else {\n      this.items = [];\n    }\n    this.updatePlaceholderState();\n  }\n  updatePlaceholderState() {\n    this.showPlaceholder = !this._items.length;\n  }\n  getItemStyle(isActive) {\n    return isActive ? Object.assign({}, this.itemStyle, this.itemActiveStyle) : this.itemStyle;\n  }\n  initDragstartEvent(event) {\n    // it is necessary for mozilla\n    // data type should be 'Text' instead of 'text/plain' to keep compatibility\n    // with IE\n    event.dataTransfer?.setData('Text', 'placeholder');\n  }\n}\nSortableComponent.globalZoneIndex = 0;\nSortableComponent.ɵfac = function SortableComponent_Factory(t) {\n  return new (t || SortableComponent)(i0.ɵɵdirectiveInject(DraggableItemService));\n};\nSortableComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: SortableComponent,\n  selectors: [[\"bs-sortable\"]],\n  inputs: {\n    fieldName: \"fieldName\",\n    wrapperClass: \"wrapperClass\",\n    wrapperStyle: \"wrapperStyle\",\n    itemClass: \"itemClass\",\n    itemStyle: \"itemStyle\",\n    itemActiveClass: \"itemActiveClass\",\n    itemActiveStyle: \"itemActiveStyle\",\n    placeholderClass: \"placeholderClass\",\n    placeholderStyle: \"placeholderStyle\",\n    placeholderItem: \"placeholderItem\",\n    itemTemplate: \"itemTemplate\"\n  },\n  outputs: {\n    onChange: \"onChange\"\n  },\n  exportAs: [\"bs-sortable\"],\n  features: [i0.ɵɵProvidersFeature([{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => SortableComponent),\n    multi: true\n  }])],\n  decls: 5,\n  vars: 4,\n  consts: [[3, \"ngClass\", \"ngStyle\", \"dragover\", \"dragenter\", \"drop\", \"mouseleave\"], [3, \"ngClass\", \"ngStyle\", \"dragover\", \"dragenter\", 4, \"ngIf\"], [\"draggable\", \"true\", \"aria-dropeffect\", \"move\", 3, \"ngClass\", \"ngStyle\", \"dragstart\", \"dragend\", \"dragover\", \"dragenter\", 4, \"ngFor\", \"ngForOf\"], [\"defItemTemplate\", \"\"], [3, \"ngClass\", \"ngStyle\", \"dragover\", \"dragenter\"], [\"draggable\", \"true\", \"aria-dropeffect\", \"move\", 3, \"ngClass\", \"ngStyle\", \"dragstart\", \"dragend\", \"dragover\", \"dragenter\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"]],\n  template: function SortableComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵlistener(\"dragover\", function SortableComponent_Template_div_dragover_0_listener($event) {\n        return ctx.cancelEvent($event);\n      })(\"dragenter\", function SortableComponent_Template_div_dragenter_0_listener($event) {\n        return ctx.cancelEvent($event);\n      })(\"drop\", function SortableComponent_Template_div_drop_0_listener($event) {\n        return ctx.resetActiveItem($event);\n      })(\"mouseleave\", function SortableComponent_Template_div_mouseleave_0_listener($event) {\n        return ctx.resetActiveItem($event);\n      });\n      i0.ɵɵtemplate(1, SortableComponent_div_1_Template, 2, 3, \"div\", 1);\n      i0.ɵɵtemplate(2, SortableComponent_div_2_Template, 2, 11, \"div\", 2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(3, SortableComponent_ng_template_3_Template, 1, 1, \"ng-template\", null, 3, i0.ɵɵtemplateRefExtractor);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngClass\", ctx.wrapperClass)(\"ngStyle\", ctx.wrapperStyle);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.showPlaceholder);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.items);\n    }\n  },\n  dependencies: [i2.NgClass, i2.NgForOf, i2.NgIf, i2.NgTemplateOutlet, i2.NgStyle],\n  encapsulation: 2\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SortableComponent, [{\n    type: Component,\n    args: [{\n      selector: 'bs-sortable',\n      exportAs: 'bs-sortable',\n      template: `\n<div\n    [ngClass]=\"wrapperClass\"\n    [ngStyle]=\"wrapperStyle\"\n    (dragover)=\"cancelEvent($event)\"\n    (dragenter)=\"cancelEvent($event)\"\n    (drop)=\"resetActiveItem($event)\"\n    (mouseleave)=\"resetActiveItem($event)\">\n  <div\n        *ngIf=\"showPlaceholder\"\n        [ngClass]=\"placeholderClass\"\n        [ngStyle]=\"placeholderStyle\"\n        (dragover)=\"onItemDragover($event, 0)\"\n        (dragenter)=\"cancelEvent($event)\"\n    >{{placeholderItem}}</div>\n    <div\n        *ngFor=\"let item of items; let i=index;\"\n        [ngClass]=\"[ itemClass, i === activeItem ? itemActiveClass : '' ]\"\n        [ngStyle]=\"getItemStyle(i === activeItem)\"\n        draggable=\"true\"\n        (dragstart)=\"onItemDragstart($event, item, i)\"\n        (dragend)=\"resetActiveItem($event)\"\n        (dragover)=\"onItemDragover($event, i)\"\n        (dragenter)=\"cancelEvent($event)\"\n        aria-dropeffect=\"move\"\n        [attr.aria-grabbed]=\"i === activeItem\"\n    ><ng-template [ngTemplateOutlet]=\"itemTemplate || defItemTemplate\"\n  [ngTemplateOutletContext]=\"{item:item, index: i}\"></ng-template></div>\n</div>\n\n<ng-template #defItemTemplate let-item=\"item\">{{item.value}}</ng-template>\n`,\n      providers: [{\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: forwardRef(() => SortableComponent),\n        multi: true\n      }]\n    }]\n  }], function () {\n    return [{\n      type: DraggableItemService\n    }];\n  }, {\n    fieldName: [{\n      type: Input\n    }],\n    wrapperClass: [{\n      type: Input\n    }],\n    wrapperStyle: [{\n      type: Input\n    }],\n    itemClass: [{\n      type: Input\n    }],\n    itemStyle: [{\n      type: Input\n    }],\n    itemActiveClass: [{\n      type: Input\n    }],\n    itemActiveStyle: [{\n      type: Input\n    }],\n    placeholderClass: [{\n      type: Input\n    }],\n    placeholderStyle: [{\n      type: Input\n    }],\n    placeholderItem: [{\n      type: Input\n    }],\n    itemTemplate: [{\n      type: Input\n    }],\n    onChange: [{\n      type: Output\n    }]\n  });\n})();\nclass SortableModule {\n  static forRoot() {\n    return {\n      ngModule: SortableModule,\n      providers: [DraggableItemService]\n    };\n  }\n}\nSortableModule.ɵfac = function SortableModule_Factory(t) {\n  return new (t || SortableModule)();\n};\nSortableModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: SortableModule\n});\nSortableModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [CommonModule]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SortableModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [SortableComponent],\n      imports: [CommonModule],\n      exports: [SortableComponent]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { DraggableItemService, SortableComponent, SortableModule };","map":{"version":3,"names":["i0","Injectable","EventEmitter","forwardRef","Component","Input","Output","NgModule","i2","CommonModule","NG_VALUE_ACCESSOR","Subject","DraggableItemService","constructor","onCapture","dragStart","item","draggableItem","getItem","captureItem","overZoneIndex","newIndex","lastZoneIndex","next","Object","assign","i","onCaptureItem","ɵfac","ɵprov","type","args","providedIn","SortableComponent","transfer","wrapperClass","wrapperStyle","itemClass","itemStyle","itemActiveClass","itemActiveStyle","placeholderClass","placeholderStyle","placeholderItem","onChange","showPlaceholder","activeItem","onTouched","Function","prototype","onChanged","_items","currentZoneIndex","globalZoneIndex","subscribe","onDrop","items","value","out","map","x","initData","emit","onItemDragstart","event","initDragstartEvent","initialIndex","onItemDragover","preventDefault","dragItem","length","newArray","slice","updatePlaceholderState","cancelEvent","filter","resetActiveItem","registerOnChange","callback","registerOnTouched","writeValue","id","fieldName","getItemStyle","isActive","dataTransfer","setData","ɵcmp","provide","useExisting","multi","NgClass","NgForOf","NgIf","NgTemplateOutlet","NgStyle","selector","exportAs","template","providers","itemTemplate","SortableModule","forRoot","ngModule","ɵmod","ɵinj","declarations","imports","exports"],"sources":["Z:/Z/DEV/Bravi/BraviFront/node_modules/ngx-bootstrap/sortable/fesm2020/ngx-bootstrap-sortable.mjs"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { Injectable, EventEmitter, forwardRef, Component, Input, Output, NgModule } from '@angular/core';\nimport * as i2 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { Subject } from 'rxjs';\n\nclass DraggableItemService {\n    constructor() {\n        this.onCapture = new Subject();\n    }\n    dragStart(item) {\n        this.draggableItem = item;\n    }\n    getItem() {\n        return this.draggableItem;\n    }\n    captureItem(overZoneIndex, newIndex) {\n        if (this.draggableItem && this.draggableItem.overZoneIndex !== overZoneIndex) {\n            this.draggableItem.lastZoneIndex = this.draggableItem.overZoneIndex;\n            this.draggableItem.overZoneIndex = overZoneIndex;\n            this.onCapture.next(this.draggableItem);\n            this.draggableItem = Object.assign({}, this.draggableItem, {\n                overZoneIndex,\n                i: newIndex\n            });\n        }\n        return this.draggableItem;\n    }\n    onCaptureItem() {\n        return this.onCapture;\n    }\n}\nDraggableItemService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.6\", ngImport: i0, type: DraggableItemService, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nDraggableItemService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.0.6\", ngImport: i0, type: DraggableItemService, providedIn: 'platform' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.6\", ngImport: i0, type: DraggableItemService, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'platform' }]\n        }] });\n\nclass SortableComponent {\n    constructor(transfer) {\n        /** class name for items wrapper */\n        this.wrapperClass = '';\n        /** style object for items wrapper */\n        this.wrapperStyle = {};\n        /** class name for item */\n        this.itemClass = '';\n        /** style object for item */\n        this.itemStyle = {};\n        /** class name for active item */\n        this.itemActiveClass = '';\n        /** style object for active item */\n        this.itemActiveStyle = {};\n        /** class name for placeholder */\n        this.placeholderClass = '';\n        /** style object for placeholder */\n        this.placeholderStyle = {};\n        /** placeholder item which will be shown if collection is empty */\n        this.placeholderItem = '';\n        /** fired on array change (reordering, insert, remove), same as <code>ngModelChange</code>.\n         *  Returns new items collection as a payload.\n         */\n        this.onChange = new EventEmitter();\n        this.showPlaceholder = false;\n        this.activeItem = -1;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        this.onTouched = Function.prototype;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        this.onChanged = Function.prototype;\n        this._items = [];\n        this.transfer = transfer;\n        this.currentZoneIndex = SortableComponent.globalZoneIndex++;\n        this.transfer\n            .onCaptureItem()\n            .subscribe((item) => this.onDrop(item));\n    }\n    get items() {\n        return this._items;\n    }\n    set items(value) {\n        this._items = value;\n        const out = this.items.map((x) => x.initData);\n        this.onChanged(out);\n        this.onChange.emit(out);\n    }\n    onItemDragstart(event, item, i) {\n        this.initDragstartEvent(event);\n        this.onTouched();\n        this.transfer.dragStart({\n            event,\n            item,\n            i,\n            initialIndex: i,\n            lastZoneIndex: this.currentZoneIndex,\n            overZoneIndex: this.currentZoneIndex\n        });\n    }\n    onItemDragover(event, i) {\n        if (!this.transfer.getItem()) {\n            return;\n        }\n        event.preventDefault();\n        const dragItem = this.transfer.captureItem(this.currentZoneIndex, this.items.length);\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        let newArray = [];\n        if (!dragItem) {\n            return;\n        }\n        if (!this.items.length) {\n            newArray = [dragItem.item];\n        }\n        else if (dragItem.i > i) {\n            newArray = [\n                ...this.items.slice(0, i),\n                dragItem.item,\n                ...this.items.slice(i, dragItem.i),\n                ...this.items.slice(dragItem.i + 1)\n            ];\n        }\n        else {\n            // this.draggedItem.i < i\n            newArray = [\n                ...this.items.slice(0, dragItem.i),\n                ...this.items.slice(dragItem.i + 1, i + 1),\n                dragItem.item,\n                ...this.items.slice(i + 1)\n            ];\n        }\n        this.items = newArray;\n        dragItem.i = i;\n        this.activeItem = i;\n        this.updatePlaceholderState();\n    }\n    cancelEvent(event) {\n        if (!this.transfer.getItem() || !event) {\n            return;\n        }\n        event.preventDefault();\n    }\n    onDrop(item) {\n        if (item &&\n            item.overZoneIndex !== this.currentZoneIndex &&\n            item.lastZoneIndex === this.currentZoneIndex) {\n            this.items = this.items.filter((x, i) => i !== item.i);\n            this.updatePlaceholderState();\n        }\n        this.resetActiveItem();\n    }\n    resetActiveItem(event) {\n        this.cancelEvent(event);\n        this.activeItem = -1;\n    }\n    registerOnChange(callback) {\n        this.onChanged = callback;\n    }\n    registerOnTouched(callback) {\n        this.onTouched = callback;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    writeValue(value) {\n        if (value) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            this.items = value.map((x, i) => ({\n                id: i,\n                initData: x,\n                value: this.fieldName ? x[this.fieldName] : x\n            }));\n        }\n        else {\n            this.items = [];\n        }\n        this.updatePlaceholderState();\n    }\n    updatePlaceholderState() {\n        this.showPlaceholder = !this._items.length;\n    }\n    getItemStyle(isActive) {\n        return isActive\n            ? Object.assign({}, this.itemStyle, this.itemActiveStyle)\n            : this.itemStyle;\n    }\n    initDragstartEvent(event) {\n        // it is necessary for mozilla\n        // data type should be 'Text' instead of 'text/plain' to keep compatibility\n        // with IE\n        event.dataTransfer?.setData('Text', 'placeholder');\n    }\n}\nSortableComponent.globalZoneIndex = 0;\nSortableComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.6\", ngImport: i0, type: SortableComponent, deps: [{ token: DraggableItemService }], target: i0.ɵɵFactoryTarget.Component });\nSortableComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.0.6\", type: SortableComponent, selector: \"bs-sortable\", inputs: { fieldName: \"fieldName\", wrapperClass: \"wrapperClass\", wrapperStyle: \"wrapperStyle\", itemClass: \"itemClass\", itemStyle: \"itemStyle\", itemActiveClass: \"itemActiveClass\", itemActiveStyle: \"itemActiveStyle\", placeholderClass: \"placeholderClass\", placeholderStyle: \"placeholderStyle\", placeholderItem: \"placeholderItem\", itemTemplate: \"itemTemplate\" }, outputs: { onChange: \"onChange\" }, providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => SortableComponent),\n            multi: true\n        }\n    ], exportAs: [\"bs-sortable\"], ngImport: i0, template: `\n<div\n    [ngClass]=\"wrapperClass\"\n    [ngStyle]=\"wrapperStyle\"\n    (dragover)=\"cancelEvent($event)\"\n    (dragenter)=\"cancelEvent($event)\"\n    (drop)=\"resetActiveItem($event)\"\n    (mouseleave)=\"resetActiveItem($event)\">\n  <div\n        *ngIf=\"showPlaceholder\"\n        [ngClass]=\"placeholderClass\"\n        [ngStyle]=\"placeholderStyle\"\n        (dragover)=\"onItemDragover($event, 0)\"\n        (dragenter)=\"cancelEvent($event)\"\n    >{{placeholderItem}}</div>\n    <div\n        *ngFor=\"let item of items; let i=index;\"\n        [ngClass]=\"[ itemClass, i === activeItem ? itemActiveClass : '' ]\"\n        [ngStyle]=\"getItemStyle(i === activeItem)\"\n        draggable=\"true\"\n        (dragstart)=\"onItemDragstart($event, item, i)\"\n        (dragend)=\"resetActiveItem($event)\"\n        (dragover)=\"onItemDragover($event, i)\"\n        (dragenter)=\"cancelEvent($event)\"\n        aria-dropeffect=\"move\"\n        [attr.aria-grabbed]=\"i === activeItem\"\n    ><ng-template [ngTemplateOutlet]=\"itemTemplate || defItemTemplate\"\n  [ngTemplateOutletContext]=\"{item:item, index: i}\"></ng-template></div>\n</div>\n\n<ng-template #defItemTemplate let-item=\"item\">{{item.value}}</ng-template>\n`, isInline: true, dependencies: [{ kind: \"directive\", type: i2.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { kind: \"directive\", type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i2.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }, { kind: \"directive\", type: i2.NgStyle, selector: \"[ngStyle]\", inputs: [\"ngStyle\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.6\", ngImport: i0, type: SortableComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'bs-sortable',\n                    exportAs: 'bs-sortable',\n                    template: `\n<div\n    [ngClass]=\"wrapperClass\"\n    [ngStyle]=\"wrapperStyle\"\n    (dragover)=\"cancelEvent($event)\"\n    (dragenter)=\"cancelEvent($event)\"\n    (drop)=\"resetActiveItem($event)\"\n    (mouseleave)=\"resetActiveItem($event)\">\n  <div\n        *ngIf=\"showPlaceholder\"\n        [ngClass]=\"placeholderClass\"\n        [ngStyle]=\"placeholderStyle\"\n        (dragover)=\"onItemDragover($event, 0)\"\n        (dragenter)=\"cancelEvent($event)\"\n    >{{placeholderItem}}</div>\n    <div\n        *ngFor=\"let item of items; let i=index;\"\n        [ngClass]=\"[ itemClass, i === activeItem ? itemActiveClass : '' ]\"\n        [ngStyle]=\"getItemStyle(i === activeItem)\"\n        draggable=\"true\"\n        (dragstart)=\"onItemDragstart($event, item, i)\"\n        (dragend)=\"resetActiveItem($event)\"\n        (dragover)=\"onItemDragover($event, i)\"\n        (dragenter)=\"cancelEvent($event)\"\n        aria-dropeffect=\"move\"\n        [attr.aria-grabbed]=\"i === activeItem\"\n    ><ng-template [ngTemplateOutlet]=\"itemTemplate || defItemTemplate\"\n  [ngTemplateOutletContext]=\"{item:item, index: i}\"></ng-template></div>\n</div>\n\n<ng-template #defItemTemplate let-item=\"item\">{{item.value}}</ng-template>\n`,\n                    providers: [\n                        {\n                            provide: NG_VALUE_ACCESSOR,\n                            useExisting: forwardRef(() => SortableComponent),\n                            multi: true\n                        }\n                    ]\n                }]\n        }], ctorParameters: function () { return [{ type: DraggableItemService }]; }, propDecorators: { fieldName: [{\n                type: Input\n            }], wrapperClass: [{\n                type: Input\n            }], wrapperStyle: [{\n                type: Input\n            }], itemClass: [{\n                type: Input\n            }], itemStyle: [{\n                type: Input\n            }], itemActiveClass: [{\n                type: Input\n            }], itemActiveStyle: [{\n                type: Input\n            }], placeholderClass: [{\n                type: Input\n            }], placeholderStyle: [{\n                type: Input\n            }], placeholderItem: [{\n                type: Input\n            }], itemTemplate: [{\n                type: Input\n            }], onChange: [{\n                type: Output\n            }] } });\n\nclass SortableModule {\n    static forRoot() {\n        return { ngModule: SortableModule, providers: [DraggableItemService] };\n    }\n}\nSortableModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.6\", ngImport: i0, type: SortableModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nSortableModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"14.0.6\", ngImport: i0, type: SortableModule, declarations: [SortableComponent], imports: [CommonModule], exports: [SortableComponent] });\nSortableModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"14.0.6\", ngImport: i0, type: SortableModule, imports: [CommonModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.6\", ngImport: i0, type: SortableModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [SortableComponent],\n                    imports: [CommonModule],\n                    exports: [SortableComponent]\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { DraggableItemService, SortableComponent, SortableModule };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}