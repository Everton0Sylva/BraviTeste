{"ast":null,"code":"import { Contato } from 'src/app/model/Contato';\nimport { Pessoa } from 'src/app/model/Pessoa';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/request.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@swimlane/ngx-datatable\";\nconst _c0 = [\"dtTable\"];\nfunction PessoalistComponent_div_16_ng_template_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 22)(1, \"button\", 23);\n    i0.ɵɵelement(2, \"i\", 24);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"button\", 25);\n    i0.ɵɵelement(4, \"i\", 26);\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction PessoalistComponent_div_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 15)(1, \"ngx-datatable\", 16, 17);\n    i0.ɵɵelement(3, \"ngx-datatable-column\", 18)(4, \"ngx-datatable-column\", 19);\n    i0.ɵɵelementStart(5, \"ngx-datatable-column\", 20);\n    i0.ɵɵtemplate(6, PessoalistComponent_div_16_ng_template_6_Template, 5, 0, \"ng-template\", 21);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"rowHeight\", 60)(\"columnMode\", \"force\")(\"rows\", ctx_r0.listPessoasFilter)(\"footerHeight\", 80)(\"limit\", 10)(\"headerHeight\", 50);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"maxWidth\", 70)(\"sortable\", true);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"sortable\", true);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"maxWidth\", 100)(\"flexGrow\", 1)(\"sortable\", false);\n  }\n}\nexport class PessoalistComponent {\n  constructor(requestService) {\n    this.requestService = requestService;\n    this.dtLoad = false;\n  }\n  ngOnInit() {\n    this.onLoadDtTable();\n  }\n  onNewPessoa() {}\n  onLoadDtTable() {\n    this.listPessoas = [];\n    this.dtLoad = false;\n    let that = this;\n    this.requestService.GetPessoas().then(data => {\n      if (Array.isArray(data) && data.length > 0) {\n        that.listPessoas = data.map(p => {\n          let pessoa = new Pessoa();\n          pessoa.fromData(p);\n          if (Array.isArray(p.listContato) && p.listContato.length > 0) {\n            pessoa.ListContatos = p.listContato?.map(c => {\n              let contato = new Contato();\n              contato.fromData(c);\n              return contato;\n            });\n          }\n          return pessoa;\n        });\n      }\n      that.listPessoasFilter = that.listPessoas;\n      that.dtLoad = true;\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n  dtTableFilter(event) {\n    let val = event.target.value;\n    if (val.length > 0) {\n      val = val.toLowerCase().trim();\n      if (val == null || val == undefined || val == \"\") {\n        this.listPessoasFilter = this.listPessoas;\n        return;\n      }\n      this.listPessoasFilter = this.listPessoas.filter(pessoa => {\n        return pessoa.Nome.indexOf(val) >= 0 ? pessoa : false;\n      });\n    }\n  }\n}\nPessoalistComponent.ɵfac = function PessoalistComponent_Factory(t) {\n  return new (t || PessoalistComponent)(i0.ɵɵdirectiveInject(i1.RequestService));\n};\nPessoalistComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: PessoalistComponent,\n  selectors: [[\"app-pessoalist\"]],\n  viewQuery: function PessoalistComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.dtTable = _t.first);\n    }\n  },\n  decls: 17,\n  vars: 1,\n  consts: [[1, \"card\"], [1, \"card-header\"], [1, \"text-muted\"], [1, \"d-flex\", \"justify-content-end\"], [\"type\", \"button\", \"routerLink\", \"/exer3/pessoa\", 1, \"btn\", \"btn-success\", \"mr-2\"], [1, \"fa\", \"fa-user-plus\", \"ms-2\"], [1, \"card-body\"], [1, \"row\"], [1, \"d-flex\", \"align-items-center\", \"justify-content-end\"], [1, \"col-md-2\"], [1, \"input-group\"], [\"name\", \"text\", \"id\", \"inputSearch\", \"placeholder\", \"Pesquisar Pessoa\", 1, \"form-control\", 3, \"keyup.enter\"], [1, \"btn\", \"btn-outline-secondary\", \"ml-2\", 3, \"click\"], [1, \"fa\", \"fa-search\"], [\"class\", \"col-sm-12 data-table-rows data-table-responsive\", 4, \"ngIf\"], [1, \"col-sm-12\", \"data-table-rows\", \"data-table-responsive\"], [1, \"expandable\", 3, \"rowHeight\", \"columnMode\", \"rows\", \"footerHeight\", \"limit\", \"headerHeight\"], [\"dtTable\", \"\"], [\"name\", \"ID\", \"prop\", \"Id\", 3, \"maxWidth\", \"sortable\"], [\"name\", \"Nome\", \"prop\", \"Nome\", 3, \"sortable\"], [\"name\", \"\", \"prop\", \"action\", 3, \"maxWidth\", \"flexGrow\", \"sortable\"], [\"ngx-datatable-cell-template\", \"\"], [1, \"d-flex\", \"align-items-center\", \"justify-content-around\", \"mb-1\"], [1, \"btn\", \"btn-danger\", \"btn-sm\"], [1, \"fa\", \"fa-user-times\"], [1, \"btn\", \"btn-success\", \"btn-sm\"], [1, \"fa\", \"fa-address-book\"]],\n  template: function PessoalistComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"span\", 2);\n      i0.ɵɵtext(3, \"Pessoas\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"div\", 3)(5, \"button\", 4);\n      i0.ɵɵtext(6, \"Cadastrar \");\n      i0.ɵɵelement(7, \"i\", 5);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(8, \"div\", 6)(9, \"div\", 7)(10, \"div\", 8)(11, \"div\", 9)(12, \"div\", 10)(13, \"input\", 11);\n      i0.ɵɵlistener(\"keyup.enter\", function PessoalistComponent_Template_input_keyup_enter_13_listener($event) {\n        return ctx.dtTableFilter($event);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"button\", 12);\n      i0.ɵɵlistener(\"click\", function PessoalistComponent_Template_button_click_14_listener($event) {\n        return ctx.dtTableFilter($event);\n      });\n      i0.ɵɵelement(15, \"i\", 13);\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵtemplate(16, PessoalistComponent_div_16_Template, 7, 12, \"div\", 14);\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(16);\n      i0.ɵɵproperty(\"ngIf\", ctx.dtLoad);\n    }\n  },\n  dependencies: [i2.NgIf, i3.RouterLink, i4.DatatableComponent, i4.DataTableColumnDirective, i4.DataTableColumnCellDirective],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AAEA,SAASA,OAAO,QAAQ,uBAAuB;AAC/C,SAASC,MAAM,QAAQ,sBAAsB;;;;;;;;;IC6BjBC,+BAAmE;IACzBA,wBAAgC;IACtEA,iBAAS;IACTA,kCAAuC;IAAAA,wBAAkC;IACzEA,iBAAS;;;;;IAf7BA,+BAA4E;IAGpEA,2CACuB;IAKvBA,gDAA+F;IAC3FA,4FAOc;IAClBA,iBAAuB;;;;IAjBgBA,eAAgB;IAAhBA,8BAAgB;IAEvBA,eAAe;IAAfA,6BAAe;IAGDA,eAAiB;IAAjBA,+BAAiB;IAGnBA,eAAgB;IAAhBA,8BAAgB;;;ADnBhF,OAAM,MAAOC,mBAAmB;EAM9BC,YAAoBC,cAA8B;IAA9B,mBAAc,GAAdA,cAAc;IAL3B,WAAM,GAAY,KAAK;EAM9B;EAGAC,QAAQ;IACN,IAAI,CAACC,aAAa,EAAE;EACtB;EAEAC,WAAW,IAEX;EAEAD,aAAa;IACX,IAAI,CAACE,WAAW,GAAG,EAAE;IACrB,IAAI,CAACC,MAAM,GAAG,KAAK;IACnB,IAAIC,IAAI,GAAG,IAAI;IACf,IAAI,CAACN,cAAc,CAACO,UAAU,EAAE,CAACC,IAAI,CAAEC,IAAS,IAAI;MAClD,IAAIC,KAAK,CAACC,OAAO,CAACF,IAAI,CAAC,IAAIA,IAAI,CAACG,MAAM,GAAG,CAAC,EAAE;QAC1CN,IAAI,CAACF,WAAW,GAAGK,IAAI,CAACI,GAAG,CAAEC,CAAM,IAAI;UACrC,IAAIC,MAAM,GAAG,IAAInB,MAAM,EAAE;UACzBmB,MAAM,CAACC,QAAQ,CAACF,CAAC,CAAC;UAClB,IAAIJ,KAAK,CAACC,OAAO,CAACG,CAAC,CAACG,WAAW,CAAC,IAAIH,CAAC,CAACG,WAAW,CAACL,MAAM,GAAG,CAAC,EAAE;YAC5DG,MAAM,CAACG,YAAY,GAAGJ,CAAC,CAACG,WAAW,EAAEJ,GAAG,CAAEM,CAAM,IAAI;cAClD,IAAIC,OAAO,GAAG,IAAIzB,OAAO,EAAE;cAC3ByB,OAAO,CAACJ,QAAQ,CAACG,CAAC,CAAC;cACnB,OAAOC,OAAO;YAChB,CAAC,CAAC;;UAEJ,OAAOL,MAAM;QACf,CAAC,CAAC;;MAGJT,IAAI,CAACe,iBAAiB,GAAGf,IAAI,CAACF,WAAW;MACzCE,IAAI,CAACD,MAAM,GAAG,IAAI;IACpB,CAAC,CAAC,CAACiB,KAAK,CAAEC,KAAK,IAAI;MACjBC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IACpB,CAAC,CAAC;EACJ;EACAG,aAAa,CAACC,KAAU;IACtB,IAAIC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK;IAC5B,IAAIF,GAAG,CAAChB,MAAM,GAAG,CAAC,EAAE;MAClBgB,GAAG,GAAGA,GAAG,CAACG,WAAW,EAAE,CAACC,IAAI,EAAE;MAC9B,IAAIJ,GAAG,IAAI,IAAI,IAAIA,GAAG,IAAIK,SAAS,IAAIL,GAAG,IAAI,EAAE,EAAE;QAChD,IAAI,CAACP,iBAAiB,GAAG,IAAI,CAACjB,WAAW;QACzC;;MAEF,IAAI,CAACiB,iBAAiB,GAAG,IAAI,CAACjB,WAAW,CAAC8B,MAAM,CAACnB,MAAM,IAAG;QACxD,OAAOA,MAAM,CAACoB,IAAI,CAACC,OAAO,CAACR,GAAG,CAAC,IAAI,CAAC,GAAGb,MAAM,GAAG,KAAK;MACvD,CAAC,CAAC;;EAEN;;AAxDWjB,mBAAmB;mBAAnBA,mBAAmB;AAAA;AAAnBA,mBAAmB;QAAnBA,mBAAmB;EAAAuC;EAAAC;IAAA;;;;;;;;;;;;;MCXhCzC,8BAAkB;MAEeA,uBAAO;MAAAA,iBAAO;MACvCA,8BAAwC;MAC0CA,0BAC1E;MAAAA,uBAAoC;MAAAA,iBAAS;MAGzDA,8BAAuB;MAKsDA;QAAA,OAAe0C,yBAAqB;MAAA,EAAC;MAA9F1C,iBACqC;MACjCA,mCAA+E;MAAhCA;QAAA,OAAS0C,yBAAqB;MAAA,EAAC;MAAC1C,yBAC9C;MACjCA,iBAAS;MAIzBA,wEAoBM;MACVA,iBAAM;;;MArB4DA,gBAAY;MAAZA,iCAAY","names":["Contato","Pessoa","i0","PessoalistComponent","constructor","requestService","ngOnInit","onLoadDtTable","onNewPessoa","listPessoas","dtLoad","that","GetPessoas","then","data","Array","isArray","length","map","p","pessoa","fromData","listContato","ListContatos","c","contato","listPessoasFilter","catch","error","console","log","dtTableFilter","event","val","target","value","toLowerCase","trim","undefined","filter","Nome","indexOf","selectors","viewQuery","ctx"],"sourceRoot":"","sources":["Z:\\Z\\DEV\\Bravi\\Ver2\\src\\app\\views\\exer3\\pessoalist\\pessoalist.component.ts","Z:\\Z\\DEV\\Bravi\\Ver2\\src\\app\\views\\exer3\\pessoalist\\pessoalist.component.html"],"sourcesContent":["\nimport { Component, OnInit, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { Contato } from 'src/app/model/Contato';\nimport { Pessoa } from 'src/app/model/Pessoa';\nimport { RequestService } from 'src/app/services/request.service';\n\n@Component({\n  selector: 'app-pessoalist',\n  templateUrl: './pessoalist.component.html',\n  styleUrls: ['./pessoalist.component.css']\n})\nexport class PessoalistComponent implements OnInit {\n  public dtLoad: boolean = false;\n  public listPessoas: Array<Pessoa>;\n  public listPessoasFilter: Array<Pessoa>;\n\n  @ViewChild('dtTable') dtTable: any;\n  constructor(private requestService: RequestService) {\n  }\n\n\n  ngOnInit() {\n    this.onLoadDtTable();\n  }\n\n  onNewPessoa() {\n\n  }\n\n  onLoadDtTable() {\n    this.listPessoas = [];\n    this.dtLoad = false;\n    let that = this;\n    this.requestService.GetPessoas().then((data: any) => {\n      if (Array.isArray(data) && data.length > 0) {\n        that.listPessoas = data.map((p: any) => {\n          let pessoa = new Pessoa();\n          pessoa.fromData(p);\n          if (Array.isArray(p.listContato) && p.listContato.length > 0) {\n            pessoa.ListContatos = p.listContato?.map((c: any) => {\n              let contato = new Contato();\n              contato.fromData(c);\n              return contato;\n            });\n          }\n          return pessoa\n        });\n      }\n\n      that.listPessoasFilter = that.listPessoas;\n      that.dtLoad = true;\n    }).catch((error) => {\n      console.log(error);\n    })\n  }\n  dtTableFilter(event: any) {\n    let val = event.target.value\n    if (val.length > 0) {\n      val = val.toLowerCase().trim();\n      if (val == null || val == undefined || val == \"\") {\n        this.listPessoasFilter = this.listPessoas;\n        return\n      }\n      this.listPessoasFilter = this.listPessoas.filter(pessoa => {\n        return pessoa.Nome.indexOf(val) >= 0 ? pessoa : false\n      })\n    }\n  }\n}\n","<div class=\"card\">\n    <div class=\"card-header\">\n        <span class=\"text-muted\">Pessoas</span>\n        <div class=\"d-flex justify-content-end\">\n            <button type=\"button\" routerLink=\"/exer3/pessoa\" class=\"btn btn-success mr-2\">Cadastrar\n                <i class='fa fa-user-plus ms-2'></i></button>\n        </div>\n    </div>\n    <div class=\"card-body\">\n        <div class=\"row\">\n            <div class=\"d-flex align-items-center justify-content-end\">\n                <div class=\"col-md-2\">\n                    <div class=\"input-group\">\n                        <input class=\"form-control\" name=\"text\" id=\"inputSearch\" (keyup.enter)=\"dtTableFilter($event)\"\n                            placeholder=\"Pesquisar Pessoa\" />\n                            <button class=\"btn btn-outline-secondary ml-2\" (click)=\"dtTableFilter($event)\"><i\n                                    class='fa fa-search'></i>\n                            </button>\n                    </div>\n                </div>\n            </div>\n            <div class=\"col-sm-12 data-table-rows data-table-responsive\" *ngIf=\"dtLoad\">\n                <ngx-datatable #dtTable class=\"expandable\" [rowHeight]=\"60\" [columnMode]=\"'force'\"\n                    [rows]=\"listPessoasFilter\" [footerHeight]=\"80\" [limit]=\"10\" [headerHeight]=\"50\">\n                    <ngx-datatable-column name=\"ID\" [maxWidth]=\"70\" prop=\"Id\" [sortable]=\"true\">\n                    </ngx-datatable-column>\n\n                    <ngx-datatable-column name=\"Nome\" prop=\"Nome\" [sortable]=\"true\">\n                    </ngx-datatable-column>\n\n                    <ngx-datatable-column name=\"\" prop=\"action\" [maxWidth]=\"100\" [flexGrow]=\"1\" [sortable]=\"false\">\n                        <ng-template let-row=\"row\" let-value=\"value\" ngx-datatable-cell-template>\n                            <div class=\"d-flex align-items-center justify-content-around mb-1\">\n                                <button class=\"btn btn-danger btn-sm\"><i class='fa fa-user-times'></i>\n                                </button>\n                                <button class=\"btn btn-success btn-sm\"><i class='fa fa-address-book'></i>\n                                </button>\n                            </div>\n                        </ng-template>\n                    </ngx-datatable-column>\n                </ngx-datatable>\n            </div>\n        </div>\n    </div>\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}