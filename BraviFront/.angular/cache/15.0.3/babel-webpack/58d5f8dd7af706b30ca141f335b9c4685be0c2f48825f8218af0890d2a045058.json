{"ast":null,"code":"import { environment } from '../../environment/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nexport class RequestService {\n  constructor(http, router) {\n    this.http = http;\n    this.router = router;\n  }\n  GetPessoas(param = null) {\n    return new Promise((resolve, reject) => {\n      let url = environment.url + \"/api/pessoa\";\n      this.http.get(url, {}).toPromise().then(data => {\n        resolve(data);\n      }).catch(error => {\n        reject(error);\n      });\n    });\n  }\n  PostPessoas(pessoa) {\n    return new Promise((resolve, reject) => {\n      let url = environment.url + \"/api/pessoa\";\n      this.http.post(url, pessoa, {}).toPromise().then(data => {\n        resolve(data);\n      }).catch(error => {\n        reject(error);\n      });\n    });\n  }\n}\nRequestService.ɵfac = function RequestService_Factory(t) {\n  return new (t || RequestService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Router));\n};\nRequestService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: RequestService,\n  factory: RequestService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAGA,SAASA,WAAW,QAAQ,+BAA+B;;;;AAM3D,OAAM,MAAOC,cAAc;EAGzBC,YAAoBC,IAAgB,EAAUC,MAAc;IAAxC,SAAI,GAAJD,IAAI;IAAsB,WAAM,GAANC,MAAM;EAAa;EAE1DC,UAAU,CAACC,QAAa,IAAI;IACjC,OAAO,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAI;MACrC,IAAIC,GAAG,GAAGV,WAAW,CAACU,GAAG,GAAG,aAAa;MACzC,IAAI,CAACP,IAAI,CAACQ,GAAG,CAACD,GAAG,EAAE,EAClB,CAAC,CACCE,SAAS,EAAE,CACXC,IAAI,CACHC,IAAI,IAAG;QACLN,OAAO,CAACM,IAAI,CAAC;MACf,CAAC,CACF,CAACC,KAAK,CAACC,KAAK,IAAG;QACdP,MAAM,CAACO,KAAK,CAAC;MACf,CAAC,CAAC;IAEN,CAAC,CAAC;EACJ;EAGOC,WAAW,CAACC,MAAc;IAC/B,OAAO,IAAIX,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAI;MACrC,IAAIC,GAAG,GAAGV,WAAW,CAACU,GAAG,GAAG,aAAa;MACzC,IAAI,CAACP,IAAI,CAACgB,IAAI,CAACT,GAAG,EAAEQ,MAAM,EAAE,EAC3B,CAAC,CACCN,SAAS,EAAE,CACXC,IAAI,CACHC,IAAI,IAAG;QACLN,OAAO,CAACM,IAAI,CAAC;MACf,CAAC,CACF,CAACC,KAAK,CAACC,KAAK,IAAG;QACdP,MAAM,CAACO,KAAK,CAAC;MACf,CAAC,CAAC;IAEN,CAAC,CAAC;EACJ;;AAtCWf,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;SAAdA,cAAc;EAAAmB,SAAdnB,cAAc;EAAAoB,YAFb;AAAM","names":["environment","RequestService","constructor","http","router","GetPessoas","param","Promise","resolve","reject","url","get","toPromise","then","data","catch","error","PostPessoas","pessoa","post","factory","providedIn"],"sourceRoot":"","sources":["Z:\\Z\\DEV\\Bravi\\Ver2\\src\\app\\services\\request.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { environment } from '../../environment/environment';\nimport { Pessoa } from '../model/Pessoa';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RequestService {\n\n\n  constructor(private http: HttpClient, private router: Router,) { }\n\n  public GetPessoas(param: any = null) {\n    return new Promise((resolve, reject) => {\n      let url = environment.url + \"/api/pessoa\";\n      this.http.get(url, {\n      })\n        .toPromise()\n        .then(\n          data => {\n            resolve(data);\n          }\n        ).catch(error => {\n          reject(error);\n        })\n        ;\n    });\n  }\n\n\n  public PostPessoas(pessoa: Pessoa) {\n    return new Promise((resolve, reject) => {\n      let url = environment.url + \"/api/pessoa\";\n      this.http.post(url, pessoa, {\n      })\n        .toPromise()\n        .then(\n          data => {\n            resolve(data);\n          }\n        ).catch(error => {\n          reject(error);\n        })\n        ;\n    });\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}